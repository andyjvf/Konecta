---
- name: Crear m√∫ltiples VMs desde un template en vCenter
  hosts: all
  gather_facts: false
  collections:
    - community.vmware

  vars:
    vcenter_hostname: "{{ vcenter_host }}"
    vcenter_username: "{{ lookup('env', 'VMWARE_USER') }}"
    vcenter_password: "{{ lookup('env', 'VMWARE_PASSWORD') }}"
    datacenter_name: "{{ datacenter }}"
    template_name: "{{ template }}"
    vm_name_prefix: "{{ nueva_vm }}"   # Ejemplo: HCIMOVPER201
    num_clones: 3                     # üîÅ N√∫mero de clones a crear
    cluster_name: "{{ cluster | default(omit) }}"
    datastore_name: "{{ datastore | default(omit) }}"
    vm_folder: "{{ folder | default(omit) }}"

  tasks:
    - name: Calcular n√∫mero base del nombre
      set_fact:
        vm_base_number: "{{ vm_name_prefix | regex_search('[0-9]+$') | int }}"
        vm_base_prefix: "{{ vm_name_prefix | regex_replace('[0-9]+$', '') }}"

    - name: Crear VMs consecutivas
      loop: "{{ range(0, num_clones) | list }}"
      loop_control:
        loop_var: i
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        datacenter: "{{ datacenter_name }}"
        name: "{{ vm_base_prefix }}{{ (vm_base_number + i) | string }}"
        state: poweredon
        template: "{{ template_name }}"
        cluster: "{{ cluster_name }}"
        folder: "{{ vm_folder }}"
        datastore: "{{ datastore_name }}"
        wait_for_ip_address: true
      delegate_to: localhost
      register: deploy_vms

    - name: Mostrar informaci√≥n de las VMs creadas
      debug:
        var: deploy_vms.results
