---
- name: Crear VM desde template en vCenter con personalización básica
  hosts: all
  gather_facts: false
  collections:
    - community.vmware
  
  vars:
    vcenter_hostname: "{{ vcenter_host }}"
    vcenter_username: "{{ lookup('env', 'VMWARE_USER') }}"
    vcenter_password: "{{ lookup('env', 'VMWARE_PASSWORD') }}"
    datacenter_name: "{{ datacenter }}"
    template_name: "{{ template }}"
    vm_name: "{{ nueva_vm }}"
    folder: "{{ folder }}"
    cluster_name: "{{ cluster | default(omit) }}"
    datastore_name: "{{ datastore | default(omit) }}"
    
    # Variables para personalización
    vm_dns_servers: "{{ dns_servers | default(['172.57.152.8', '172.57.152.6']) }}"
    vm_domain: "{{ domain | default('KTINKIY.LOCAL') }}"
    win_password: "{{ win_pass }}"
    
  tasks:
    - name: Crear VM desde template con personalización básica
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        datacenter: "{{ datacenter_name }}"
        name: "{{ vm_name }}"  # ⬅️ Nombre en vCenter
        state: poweredon
        template: "{{ template_name }}"
        folder: "{{ folder }}"
        cluster: "{{ cluster_name }}"
        datastore: "{{ datastore_name }}"
        wait_for_ip_address: true
        
        # Configuración de red - CON VLAN ESPECÍFICA
        networks:
          - name: "Movistar Peru 122"  # ⬅️ NOMBRE EXACTO DE LA VLAN
            device_type: "vmxnet3"
            start_connected: true
            type: "dhcp"  # ⬅️ Usamos DHCP inicialmente
        
        # Personalización
        customization:
          hostname: "{{ vm_name }}"  # ⬅️ NOMBRE DEL HOST WINDOWS
          password: "{{ win_password }}"
          dns_servers: "{{ vm_dns_servers }}"
          domain: "{{ vm_domain }}"
          autologon: true
          autologoncount: 1
          fullname: "STSO"
          orgname: "MOVPERU"
          timezone: 35
          
      delegate_to: localhost
      register: deploy_vm

    - name: Esperar a que la VM esté completamente lista
      pause:
        minutes: 3
      when: deploy_vm.changed

    - name: Mostrar información de la VM creada
      debug:
        var: deploy_vm.instance.ipv4
