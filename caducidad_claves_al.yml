---
- name: Reporte de seguridad - Usuarios con clave vencida y deshabilitados
  hosts: all
  remote_user: kopet
  gather_facts: true
  vars:
    # Configuración SMTP Gmail
    smtp_host: "smtp.gmail.com"
    smtp_port: 587
    smtp_username: "alertas.sistemas.pe@konecta.com"
    smtp_password: "vkbjwqfcqcnrgftg"  # Usar Ansible Vault para esto
    email_from: "alertas.sistemas.pe@konecta.com"
    email_to: "sistemas.peru@konecta.com"
    
    # Configuración del reporte
    dias_inactividad: 90  # Número de días para considerar cuenta inactiva
    grupo_objetivo: "manager"  # Grupo a verificar (opcional)

  tasks:
    - name: Verificar usuarios con contraseñas vencidas
      block:
        - name: Obtener lista de usuarios con contraseña vencida
          shell: |
            today=$(date +%s)
            for user in $(cut -d: -f1 /etc/passwd); do
              expiry_info=$(sudo chage -l "$user" 2>/dev/null | grep "Password expires")
              if [[ "$expiry_info" == *"password must be changed"* ]]; then
                echo "$user:CONTRASEÑA VENCIDA"
              elif [[ "$expiry_info" =~ ([A-Za-z]{3} [0-9]{2}, [0-9]{4}) ]]; then
                expiry_date=$(date -d "${BASH_REMATCH[1]}" +%s)
                if [ $today -gt $expiry_date ]; then
                  echo "$user:CONTRASEÑA VENCIDA"
                fi
              fi
            done
          args:
            executable: /bin/bash
          register: usuarios_vencidos
          changed_when: false

        - name: Obtener usuarios inactivos
          shell: |
            inactive_threshold=$(date -d "{{ dias_inactividad }} days ago" +%s)
            for user in $(cut -d: -f1 /etc/passwd); do
              last_login=$(sudo lastlog -u "$user" | tail -1 | awk '{print $5,$6,$7,$8}')
              if [[ "$last_login" == *"Never logged in"* ]]; then
                echo "$user:NUNCA HA INICIADO SESIÓN"
              elif [[ "$last_login" != "" ]]; then
                last_login_epoch=$(date -d "$last_login" +%s 2>/dev/null)
                if [ -n "$last_login_epoch" ] && [ $last_login_epoch -lt $inactive_threshold ]; then
                  echo "$user:INACTIVO DESDE $last_login"
                fi
              fi
            done
          args:
            executable: /bin/bash
          register: usuarios_inactivos
          changed_when: false

      rescue:
        - name: Registrar error en la recolección de datos
          debug:
            msg: "Error al verificar usuarios vencidos/inactivos"
          register: error_recoleccion

    - name: Enviar reporte por correo electrónico
      community.general.mail:
        host: "{{ smtp_host }}"
        port: "{{ smtp_port }}"
        username: "{{ smtp_username }}"
        password: "{{ smtp_password }}"
        to: "{{ email_to }}"
        subject: "Reporte de Seguridad - {{ ansible_hostname }}"
        body: |
          Reporte de seguridad - {{ ansible_date_time.date }}
          Host: {{ ansible_hostname }}
          Sistema: {{ ansible_distribution }} {{ ansible_distribution_version }}
          
          === USUARIOS CON CONTRASEÑA VENCIDA ===
          {% if usuarios_vencidos.stdout_lines %}
          {% for usuario in usuarios_vencidos.stdout_lines %}
          - {{ usuario }}
          {% endfor %}
          {% else %}
          No se encontraron usuarios con contraseña vencida
          {% endif %}
          
          === USUARIOS INACTIVOS (más de {{ dias_inactividad }} días) ===
          {% if usuarios_inactivos.stdout_lines %}
          {% for usuario in usuarios_inactivos.stdout_lines %}
          - {{ usuario }}
          {% endfor %}
          {% else %}
          No se encontraron usuarios inactivos
          {% endif %}
          
          === INFORMACIÓN ADICIONAL ===
          Usuario ejecutor: {{ remote_user }}
          Fecha de verificación: {{ ansible_date_time.date }}
        subtype: html
        secure: starttls
      delegate_to: localhost
      run_once: true
      when: error_recoleccion is not defined
