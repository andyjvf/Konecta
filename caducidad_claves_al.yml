---
- name: Reporte de seguridad - Usuarios del grupo manager con clave vencida o inactivos
  hosts: all
  remote_user: kopet
  gather_facts: true
  vars:
    dias_inactividad: 90  # Número de días para considerar cuenta inactiva
    grupo_objetivo: "manager"  # Grupo específico a verificar
    reporte_path: "/tmp/reporte_manager_{{ ansible_hostname }}.txt"

  tasks:
    - name: Verificar existencia del grupo manager
      shell: "getent group {{ grupo_objetivo }}"
      register: grupo_check
      changed_when: false
      ignore_errors: yes

    - name: Obtener usuarios del grupo manager
      shell: "getent group {{ grupo_objetivo }} | cut -d: -f4 | tr ',' '\n'"
      register: usuarios_manager
      changed_when: false
      when: grupo_check is success

    - name: Verificar usuarios manager con contraseñas vencidas
      shell: |
        today=$(date +%s)
        user="{{ item }}"
        expiry_info=$(sudo chage -l "$user" 2>/dev/null | grep "Password expires")
        if [[ "$expiry_info" == *"password must be changed"* ]]; then
          echo "$user:CONTRASEÑA VENCIDA"
        elif [[ "$expiry_info" =~ ([A-Za-z]{3} [0-9]{2}, [0-9]{4}) ]]; then
          expiry_date=$(date -d "${BASH_REMATCH[1]}" +%s)
          if [ $today -gt $expiry_date ]; then
            echo "$user:CONTRASEÑA VENCIDA"
          fi
        fi
      args:
        executable: /bin/bash
      with_items: "{{ usuarios_manager.stdout_lines }}"
      register: usuarios_vencidos
      changed_when: false
      when: grupo_check is success

    - name: Verificar inactividad de usuarios manager
      shell: |
        inactive_threshold=$(date -d "{{ dias_inactividad }} days ago" +%s)
        user="{{ item }}"
        last_login=$(sudo lastlog -u "$user" | tail -1 | awk '{print $5,$6,$7,$8}')
        if [[ "$last_login" == *"Never logged in"* ]]; then
          echo "$user:NUNCA HA INICIADO SESIÓN"
        elif [[ "$last_login" != "" ]]; then
          last_login_epoch=$(date -d "$last_login" +%s 2>/dev/null)
          if [ -n "$last_login_epoch" ] && [ $last_login_epoch -lt $inactive_threshold ]; then
            echo "$user:INACTIVO DESDE $last_login"
          fi
        fi
      args:
        executable: /bin/bash
      with_items: "{{ usuarios_manager.stdout_lines }}"
      register: usuarios_inactivos
      changed_when: false
      when: grupo_check is success

    - name: Generar reporte específico para grupo manager
      copy:
        content: |
          ================================================
          REPORTE DE SEGURIDAD - GRUPO MANAGER
          ================================================
          Host: {{ ansible_hostname }}
          Fecha: {{ ansible_date_time.date }}
          Sistema: {{ ansible_distribution }} {{ ansible_distribution_version }}
          
          [ESTADO DEL GRUPO]
          {% if grupo_check is success %}
          El grupo {{ grupo_objetivo }} existe en el sistema
          Total usuarios en el grupo: {{ usuarios_manager.stdout_lines | length }}
          {% else %}
          ERROR: El grupo {{ grupo_objetivo }} no existe en el sistema
          {% endif %}
          
          [USUARIOS CON CONTRASEÑA VENCIDA]
          {% if usuarios_vencidos.results | map(attribute='stdout') | select('match','.+') | list %}
          {% for result in usuarios_vencidos.results %}
            {% if result.stdout %}
          * {{ result.stdout }}
            {% endif %}
          {% endfor %}
          {% else %}
          No se encontraron usuarios con contraseña vencida
          {% endif %}
          
          [USUARIOS INACTIVOS (más de {{ dias_inactividad }} días)]
          {% if usuarios_inactivos.results | map(attribute='stdout') | select('match','.+') | list %}
          {% for result in usuarios_inactivos.results %}
            {% if result.stdout %}
          * {{ result.stdout }}
            {% endif %}
          {% endfor %}
          {% else %}
          No se encontraron usuarios inactivos
          {% endif %}
        dest: "{{ reporte_path }}"
      delegate_to: "{{ inventory_hostname }}"
      run_once: true

    - name: Mostrar ubicación del reporte
      debug:
        msg: |
          Reporte del grupo manager generado en:
          {{ reporte_path }}
          
          Contenido resumido:
          {% if grupo_check is success %}
          - Usuarios en grupo: {{ usuarios_manager.stdout_lines | join(', ') }}
          - Contraseñas vencidas: {{ usuarios_vencidos.results | selectattr('stdout', 'match', '.+') | list | count }}
          - Usuarios inactivos: {{ usuarios_inactivos.results | selectattr('stdout', 'match', '.+') | list | count }}
          {% else %}
          - El grupo manager no existe en este sistema
          {% endif %}
      when: error_recoleccion is not defined
